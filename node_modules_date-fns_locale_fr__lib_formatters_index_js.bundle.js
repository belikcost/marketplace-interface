"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkplacemik_beta"] = self["webpackChunkplacemik_beta"] || []).push([["node_modules_date-fns_locale_fr__lib_formatters_index_js"],{

/***/ "./node_modules/date-fns/locale/fr/_lib/formatters/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/date-fns/locale/fr/_lib/formatters/index.js ***!
  \******************************************************************/
/***/ (function(module, exports) {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\nvar formatters = {}; // Special case for day of month ordinals in long date format context:\n// 1er mars, 2 mars, 3 mars, â€¦\n// See https://github.com/date-fns/date-fns/issues/437\n\nvar monthsTokens = ['MMM', 'MMMM'];\nmonthsTokens.forEach(function (monthToken) {\n  formatters['Do ' + monthToken] = function (date, options) {\n    var commonFormatters = options.formatters;\n    var dayOfMonthToken = date.getUTCDate() === 1 ? 'Do' : 'D';\n    var dayOfMonthFormatter = commonFormatters[dayOfMonthToken];\n    var monthFormatter = commonFormatters[monthToken];\n    return dayOfMonthFormatter(date, options) + ' ' + monthFormatter(date, options);\n  };\n});\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;\n\n//# sourceURL=webpack://placemik-beta/./node_modules/date-fns/locale/fr/_lib/formatters/index.js?");

/***/ })

}]);